server {
  listen 80;
  listen [::]:80;
  access_log off;
  root /usr/share/nginx/html;
  index index.html index.htm;
  server_name example.com;
  server_tokens off;

  location / {
    try_files $uri $uri/ /index.html?$args;

    #redirect from HTTP to HTTPS
    #rewrite ^ https://$host$request_uri? permanent;
  }

  error_page   500 502 503 504  /50x.html;

  location = /50x.html {
    root   /usr/share/nginx/html;
  }

}

server {
#  listen 443 ssl http2;
#  listen [::]:443 ssl http2;
  listen 443;
  listen [::]:443;
  server_name example.com;

  index index.html index.htm;

  root /usr/share/nginx/html;
  
  server_tokens off;
#  more_clear_headers 'Server';

#  ssl_certificate /etc/nginx/ssl/live/example.com/fullchain.pem;
#  ssl_certificate_key /etc/nginx/ssl/live/example.com/privkey.pem;
#  ssl_trusted_certificate /etc/nginx/ssl/live/example.com/fullchain.pem;

#  include /etc/nginx/conf.d/options-ssl-nginx.conf;

  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "no-referrer-when-downgrade" always;
  add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ /index.html?$args;
  }


  location ~ /\.ht {
    deny all;
  }

  location = /favicon.ico {
    log_not_found off; access_log off;
  }
  location = /robots.txt {
    log_not_found off; access_log off; allow all;
  }
  location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
    expires max;
    log_not_found off;
  }
}
name: Deploy dev and run E2E tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
   
  # deploy repo on server and run bacic scripts
  deploy:
    name: Deploy dev
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    # force build docker,
    - name: copy repo via ssh key
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.REMOTE_PORT }}
        rm: true
        source: "*"
        target: /home/ubuntu/website/www/

    # force build docker, run install dependencies and run E2E tests
    - name: Rebuild docker and run E2E tests
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.REMOTE_PORT }}
        script: |
#          ln -s /home/ubuntu/website/secure/.env /home/ubuntu/website/www/
#          ln -s /home/ubuntu/website/secure/frontend/dev.env /home/ubuntu/website/www/frontend/
#          ln -s /home/ubuntu/website/secure/frontend/prod.env /home/ubuntu/website/www/frontend/
#          ln -s /home/ubuntu/website/secure/frontend/nginx/auth/.htpasswd /home/ubuntu/website/www/frontend/nginx/auth/
#          ln -s /home/ubuntu/website/data /home/ubuntu/website/www/backend/uploads/
          cd /home/ubuntu/website/www/ && docker-compose -f docker-compose.dev.yml up -d --build --force-recreate
  
  # prepere for E2E test and run tests
  E2E-tests:
    name: E2E tests
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # install required dependencies and run E2E tests
      - name: run E2E tests
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.REMOTE_PORT }}
        script: |
          yarn --cwd /home/ubuntu/website/www/frontend/ install
          yarn --cwd /home/ubuntu/website/www/frontend/ run test_dev